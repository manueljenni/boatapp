@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* TODO: Ideally these should come directly from the Tailwind config */
  :root {
    --color-primary: #d5ab46;
    --color-secondary: #221119;
    --color-primary-light: #d0b473;
  }
}

input:focus {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px var(--color-primary-light);
  outline: none;
}

/* Override the default blue background when autofilling a form */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus {
  background-color: var(--color-primary-light-2) !important;
}

.centerDiv {
  @apply flex justify-center items-center;
}

.button-gradient {
  position: relative;
  z-index: 1;
  background-image: linear-gradient(
    60deg,
    var(--color-primary-light),
    var(--color-primary)
  );
}

.delete-button-gradient {
  position: relative;
  z-index: 1;
  background-image: linear-gradient(
    60deg,
    #e63946,
    #c23b3d
  );
}

.form-button {
  @apply mt-8;
}

/* Animations  */
.transition-in-1 {
  opacity: 0;
  transform: translateY(-20px);
  animation: transitionIn 0.4s ease forwards;
}

.transition-in-2 {
  opacity: 0;
  transform: translateY(-20px);
  animation: transitionIn 0.4s ease .3s forwards;
}

@keyframes transitionIn {
  from {
    opacity: .2;
    transform: translateY(20px) rotateX(-10deg);
  }

  to {
    opacity: 1;
    transform: translateY(0px) rotateX(0deg);
  }
}

/* On mobile, animate the first and second boat */
@media (max-width: 768px) {
  .grid > div:nth-child(1) {
     @apply transition-in-1;
   }
 
   .grid > div:nth-child(2) {
     @apply transition-in-2;
   }
 }

/* On tablets & desktop, animate the first two rows of boats */
@media (min-width: 768px) {
 .grid > div:nth-child(-n+3) {
    @apply transition-in-1;
  }

  .grid > div:nth-child(n+4):nth-child(-n+6) {
    @apply transition-in-2;
  }
}
